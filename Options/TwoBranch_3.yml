# general settings
name: TwoBranch_3
model_type: ConditionGenerator
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 100
condition: &condition
  type: mean # mean using downsampled image, histogram using histogram difference
  scale_down: 16
weights_from_phaseI: ~
sigma_init: 0.05
selective: false

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage_Mask
    dataroot_gt: "./data/LOLv1/Train/target"
    dataroot_lq: "./data/LOLv1/Train/input"
    geometric_augs: true
    condition: *condition
    labelnoise:
      tem_mean: 1.0
      tem_var: 0.01
      bright_mean: 1.0
      bright_var: 0.01
      contrast_mean: 1.
      contrast_var: 0.01

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8

    ### ------- Training on single fixed-patch size---------
    mini_batch_sizes: [8]
    iters: [300000]
    gt_size: 384
    gt_sizes: [384]
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage_Mask
    dataroot_gt: "./data/LOLv1/Test/target"
    dataroot_lq: "./data/LOLv1/Test/input"
    condition: *condition
    io_backend:
      type: disk

# network structures
network_g:
  type: Network
  in_channels: 3
  out_channels: 3
  n_feat: 24
  d_state: [1,1,1]
  ssm_ratio: 1
  mlp_ratio: 4
  mlp_type: gdmlp
  use_pixelshuffle: true
  drop_path: 0.
  stage: 1
  num_blocks: [2,2,2]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 300000
  warmup_iter: -1 # no warm up
  max_grad_norm: 1

  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [200000, 50000, 50000]
    restart_weights: [1, 1, 1]
    eta_mins: [0.0002, 0.0002, 0.000001]

  optim_g:
    type: Adam
    lr: 0.0002
    # weight_decay: !!float 1e-4
    betas: [0.9, 0.999]

  mixing_augs:
    mixup: false
    # mixup_beta: 1.2
    # use_identity: true



  pixel_opt:
    type: MSELoss
    loss_weight: 1
    reduction: mean


# validation settings
val:
  window_size: 4
  val_freq: !!float 1e3
  save_img: true
  rgb2bgr: true
  use_image: true
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    # ssim:
    #   type: calculate_ssim
    #   crop_border: 0
    #   test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  record_grad: false
  wandb:
    project: underwater
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
