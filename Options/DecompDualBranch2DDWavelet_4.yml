# general settings
name: DecompDualBranch2DDWavelet_4
model_type: ImageEnhancer
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 100
condition: &condition
  type: mean # mean using downsampled image, histogram using histogram difference
  scale_down: 16
  noise_level: 0.1

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage_Mask
    dataroot_gt: ./data/LOLv1/Train/target
    dataroot_lq: ./data/LOLv1/Train/input
    geometric_augs: true
    condition: *condition
    mim:
      mask_ratio: 0.75
      mask_patch_size: 1
      model_patch_size: 1
    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8

    ### ------- Training on single fixed-patch size---------
    mini_batch_sizes: [8]
    iters: [300000]
    gt_size: 128
    gt_sizes: [128]
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage_Mask
    dataroot_gt: ./data/LOLv1/Test/target
    dataroot_lq: ./data/LOLv1/Test/input
    condition: *condition
    io_backend:
      type: disk

# network structures
network_g:
  type: DecompDualBranchDDWavelet
  in_channels: 6
  out_channels: 3
  n_feat: 40
  d_state: [1,1,1]
  ssm_ratio: 1
  mlp_ratio: 4
  mlp_type: gdmlp
  use_pixelshuffle: true
  drop_path: 0.
  sam: false
  stage: 1
  num_blocks: [2,2,2]
  decomp_model: model4

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 300000
  warmup_iter: -1 # no warm up
  max_grad_norm: 1

  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [150000, 46000, 104000]
    restart_weights: [1, 1, 1]
    eta_mins: [0.0002, 0.0002, 0.000001]

  optim_g:
    type: AdamW
    lr: 0.0002
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]

  mixing_augs:
    mixup: false
    # mixup_beta: 1.2
    # use_identity: true


  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean

  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 1  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 0.01
    style_weight: 0
    criterion: l1


# validation settings
val:
  window_size: 16
  val_freq: !!float 1e3
  save_img: true
  rgb2bgr: true
  use_image: true
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  record_grad: false
  wandb:
    project: underwater
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
