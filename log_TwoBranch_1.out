nohup: ignoring input
Cannot import dcn. Ignore this warning if dcn is not used. Otherwise install BasicSR with compiling dcn.
Cannot import selective_scan_cuda. This affects speed.
Disable distributed.
Path already exists. Rename it to /home/vladimirfrants9/Bayesian-Enhancement-Model/experiments/TwoBranch_1_archived_20241209_191420
Path already exists. Rename it to /home/vladimirfrants9/Bayesian-Enhancement-Model/tb_logger/TwoBranch_1_archived_20241209_191420
2024-12-09 19:14:20,206 INFO: 
                ____                _       _____  ____
               / __ ) ____ _ _____ (_)_____/ ___/ / __ \
              / __  |/ __ `// ___// // ___/\__ \ / /_/ /
             / /_/ // /_/ /(__  )/ // /__ ___/ // _, _/
            /_____/ \__,_//____//_/ \___//____//_/ |_|
     ______                   __   __                 __      __
    / ____/____   ____   ____/ /  / /   __  __ _____ / /__   / /
   / / __ / __ \ / __ \ / __  /  / /   / / / // ___// //_/  / /
  / /_/ // /_/ // /_/ // /_/ /  / /___/ /_/ // /__ / /<    /_/
  \____/ \____/ \____/ \____/  /_____/\____/ \___//_/|_|  (_)
    
Version Information: 
	BasicSR: 1.2.0+d419381
	PyTorch: 1.13.1+cu117
	TorchVision: 0.14.1+cu117
2024-12-09 19:14:20,206 INFO: 
  name: TwoBranch_1
  model_type: ImageEnhancer
  scale: 1
  num_gpu: 1
  manual_seed: 100
  condition:[
    type: mean
    scale_down: 16
    noise_level: 0.1
  ]
  datasets:[
    train:[
      name: TrainSet
      type: Dataset_PairedImage_Mask
      dataroot_gt: ./data/LOLv1/Train/target
      dataroot_lq: ./data/LOLv1/Train/input
      geometric_augs: True
      condition:[
        type: mean
        scale_down: 16
        noise_level: 0.1
      ]
      mim:[
        mask_ratio: 0.75
        mask_patch_size: 1
        model_patch_size: 1
      ]
      filename_tmpl: {}
      io_backend:[
        type: disk
      ]
      use_shuffle: True
      num_worker_per_gpu: 8
      batch_size_per_gpu: 8
      mini_batch_sizes: [8]
      iters: [300000]
      gt_size: 128
      gt_sizes: [128]
      dataset_enlarge_ratio: 1
      prefetch_mode: None
      phase: train
      scale: 1
    ]
    val:[
      name: ValSet
      type: Dataset_PairedImage_Mask
      dataroot_gt: ./data/LOLv1/Test/target
      dataroot_lq: ./data/LOLv1/Test/input
      condition:[
        type: mean
        scale_down: 16
        noise_level: 0.1
      ]
      io_backend:[
        type: disk
      ]
      phase: val
      scale: 1
    ]
  ]
  network_g:[
    type: TunedModel
    in_channels: 6
    out_channels: 3
    n_feat: 40
    d_state: [1, 1, 1]
    ssm_ratio: 1
    mlp_ratio: 4
    mlp_type: gdmlp
    use_pixelshuffle: True
    drop_path: 0.0
    sam: False
    stage: 1
    num_blocks: [2, 2, 2]
  ]
  path:[
    pretrain_network_g: None
    strict_load_g: True
    resume_state: None
    experiments_root: /home/vladimirfrants9/Bayesian-Enhancement-Model/experiments/TwoBranch_1
    models: /home/vladimirfrants9/Bayesian-Enhancement-Model/experiments/TwoBranch_1/models
    training_states: /home/vladimirfrants9/Bayesian-Enhancement-Model/experiments/TwoBranch_1/training_states
    log: /home/vladimirfrants9/Bayesian-Enhancement-Model/experiments/TwoBranch_1
    visualization: /home/vladimirfrants9/Bayesian-Enhancement-Model/experiments/TwoBranch_1/visualization
  ]
  train:[
    total_iter: 300000
    warmup_iter: -1
    max_grad_norm: 1
    scheduler:[
      type: CosineAnnealingRestartCyclicLR
      periods: [150000, 46000, 104000]
      restart_weights: [1, 1, 1]
      eta_mins: [0.0002, 0.0002, 1e-06]
    ]
    optim_g:[
      type: AdamW
      lr: 0.0002
      weight_decay: 0.0001
      betas: [0.9, 0.999]
    ]
    mixing_augs:[
      mixup: False
    ]
    pixel_opt:[
      type: L1Loss
      loss_weight: 1
      reduction: mean
    ]
    perceptual_opt:[
      type: PerceptualLoss
      layer_weights:[
        conv5_4: 1
      ]
      vgg_type: vgg19
      use_input_norm: True
      range_norm: False
      perceptual_weight: 0.01
      style_weight: 0
      criterion: l1
    ]
  ]
  val:[
    window_size: 16
    val_freq: 1000.0
    save_img: True
    rgb2bgr: True
    use_image: True
    max_minibatch: 8
    metrics:[
      psnr:[
        type: calculate_psnr
        crop_border: 0
        test_y_channel: False
      ]
      ssim:[
        type: calculate_ssim
        crop_border: 0
        test_y_channel: False
      ]
    ]
  ]
  logger:[
    print_freq: 100
    save_checkpoint_freq: 1000.0
    use_tb_logger: True
    record_grad: False
    wandb:[
      project: underwater
      resume_id: None
    ]
  ]
  dist_params:[
    backend: nccl
    port: 29500
  ]
  dist: False
  rank: 0
  world_size: 1
  auto_resume: False
  is_train: True
  root_path: /home/vladimirfrants9/Bayesian-Enhancement-Model

2024-12-09 19:14:20,964 INFO: Use wandb logger with id=9ci85yp6; project=underwater.
2024-12-09 19:14:20,987 INFO: Dataset [Dataset_PairedImage_Mask] - TrainSet is built.
2024-12-09 19:14:20,987 INFO: Training statistics:
	Number of train images: 485
	Dataset enlarge ratio: 1
	Batch size per gpu: 8
	World size (gpu number): 1
	Require iter number per epoch: 61
	Total epochs: 4919; iters: 300000.
2024-12-09 19:14:20,988 INFO: Dataset [Dataset_PairedImage_Mask] - ValSet is built.
2024-12-09 19:14:20,988 INFO: Number of val images/folders in ValSet: 15
2024-12-09 19:14:21,075 INFO: Network [TunedModel] is created.
2024-12-09 19:14:22,378 INFO: Loss [L1Loss] is created.
2024-12-09 19:14:23,663 INFO: Loss [PerceptualLoss] is created.
TunedModel(
  (first_conv): Conv2d(6, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (encoders): ModuleList(
    (0): Sequential(
      (0): VSSBlock(
        (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
      (1): VSSBlock(
        (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
    )
    (1): Sequential(
      (0): VSSBlock(
        (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
          (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
      (1): VSSBlock(
        (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
          (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
    )
  )
  (bottleneck): Sequential(
    (0): VSSBlock(
      (norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (op): SS2D(
        (out_norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
        (in_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (act): SiLU()
        (conv2d): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
        (out_act): Identity()
        (out_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (dropout): Identity()
      )
      (drop_path): timm.DropPath(0)
      (norm2): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (mlp): gdMlp(
        (project_in): Conv2d(160, 1280, kernel_size=(1, 1), stride=(1, 1))
        (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
        (project_out): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
        (act): GELU(approximate='none')
      )
    )
    (1): VSSBlock(
      (norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (op): SS2D(
        (out_norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
        (in_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (act): SiLU()
        (conv2d): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
        (out_act): Identity()
        (out_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (dropout): Identity()
      )
      (drop_path): timm.DropPath(0)
      (norm2): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (mlp): gdMlp(
        (project_in): Conv2d(160, 1280, kernel_size=(1, 1), stride=(1, 1))
        (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
        (project_out): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
        (act): GELU(approximate='none')
      )
    )
  )
  (decoders): ModuleList(
    (0): ModuleDict(
      (up): ConvTranspose2d(160, 80, kernel_size=(2, 2), stride=(2, 2))
      (fuse): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (block): Sequential(
        (0): VSSBlock(
          (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
            (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
        (1): VSSBlock(
          (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
            (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
      )
    )
    (1): ModuleDict(
      (up): ConvTranspose2d(80, 40, kernel_size=(2, 2), stride=(2, 2))
      (fuse): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (block): Sequential(
        (0): VSSBlock(
          (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
        (1): VSSBlock(
          (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
      )
    )
  )
  (proj): Conv2d(40, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (last_act): Identity()
  (down_layers): ModuleList(
    (0): Conv2d(40, 80, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (1): Conv2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
  )
  (first_conv2): Conv2d(6, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (encoders2): ModuleList(
    (0): Sequential(
      (0): VSSBlock(
        (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
      (1): VSSBlock(
        (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
          (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
    )
    (1): Sequential(
      (0): VSSBlock(
        (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
          (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
      (1): VSSBlock(
        (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (op): SS2D(
          (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (act): SiLU()
          (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
          (out_act): Identity()
          (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
          (dropout): Identity()
        )
        (drop_path): timm.DropPath(0)
        (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
        (mlp): gdMlp(
          (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
          (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
          (act): GELU(approximate='none')
        )
      )
    )
  )
  (bottleneck2): Sequential(
    (0): VSSBlock(
      (norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (op): SS2D(
        (out_norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
        (in_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (act): SiLU()
        (conv2d): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
        (out_act): Identity()
        (out_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (dropout): Identity()
      )
      (drop_path): timm.DropPath(0)
      (norm2): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (mlp): gdMlp(
        (project_in): Conv2d(160, 1280, kernel_size=(1, 1), stride=(1, 1))
        (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
        (project_out): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
        (act): GELU(approximate='none')
      )
    )
    (1): VSSBlock(
      (norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (op): SS2D(
        (out_norm): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
        (in_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (act): SiLU()
        (conv2d): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)
        (out_act): Identity()
        (out_proj): Linear2d(in_features=160, out_features=160, bias=False)
        (dropout): Identity()
      )
      (drop_path): timm.DropPath(0)
      (norm2): LayerNorm2d((160,), eps=1e-05, elementwise_affine=True)
      (mlp): gdMlp(
        (project_in): Conv2d(160, 1280, kernel_size=(1, 1), stride=(1, 1))
        (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
        (project_out): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1))
        (act): GELU(approximate='none')
      )
    )
  )
  (decoders2): ModuleList(
    (0): ModuleDict(
      (up): ConvTranspose2d(160, 80, kernel_size=(2, 2), stride=(2, 2))
      (fuse): Conv2d(160, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (block): Sequential(
        (0): VSSBlock(
          (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
            (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
        (1): VSSBlock(
          (norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=80, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=80, out_features=80, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((80,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(80, 640, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
            (project_out): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
      )
    )
    (1): ModuleDict(
      (up): ConvTranspose2d(80, 40, kernel_size=(2, 2), stride=(2, 2))
      (fuse): Conv2d(80, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (block): Sequential(
        (0): VSSBlock(
          (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
        (1): VSSBlock(
          (norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (op): SS2D(
            (out_norm): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
            (in_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (act): SiLU()
            (conv2d): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=40, bias=False)
            (out_act): Identity()
            (out_proj): Linear2d(in_features=40, out_features=40, bias=False)
            (dropout): Identity()
          )
          (drop_path): timm.DropPath(0)
          (norm2): LayerNorm2d((40,), eps=1e-05, elementwise_affine=True)
          (mlp): gdMlp(
            (project_in): Conv2d(40, 320, kernel_size=(1, 1), stride=(1, 1))
            (dwconv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
            (project_out): Conv2d(160, 40, kernel_size=(1, 1), stride=(1, 1))
            (act): GELU(approximate='none')
          )
        )
      )
    )
  )
  (proj2): Conv2d(40, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (last_act2): Identity()
  (down_layers2): ModuleList(
    (0): Conv2d(40, 80, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (1): Conv2d(80, 160, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
  )
  (drop_path): Identity()
  (spatial_attention): SpatialAttention(
    (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
    (sigmoid): Sigmoid()
  )
  (spatial_attention2): SpatialAttention(
    (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
    (sigmoid): Sigmoid()
  )
)
2024-12-09 19:14:23,865 INFO: Start training from epoch: 0, iter: 0
2024-12-09 19:14:58,427 INFO: [TwoBr..][epoch:  1, iter:     100, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 1:37:13, time (data): 0.346 (0.010)] l_pix: 8.9680e-02 l_percep: 2.7153e+00 
2024-12-09 19:15:30,757 INFO: [TwoBr..][epoch:  3, iter:     200, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:15:51, time (data): 0.334 (0.011)] l_pix: 8.0367e-02 l_percep: 2.4244e+00 
2024-12-09 19:16:02,538 INFO: [TwoBr..][epoch:  4, iter:     300, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:19:21, time (data): 0.318 (0.007)] l_pix: 5.3943e-02 l_percep: 2.1363e+00 
2024-12-09 19:16:34,773 INFO: [TwoBr..][epoch:  6, iter:     400, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:26:30, time (data): 0.320 (0.009)] l_pix: 4.9469e-02 l_percep: 2.2619e+00 
2024-12-09 19:17:06,859 INFO: [TwoBr..][epoch:  8, iter:     500, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:29:06, time (data): 0.321 (0.011)] l_pix: 4.5409e-02 l_percep: 1.9979e+00 
2024-12-09 19:17:38,489 INFO: [TwoBr..][epoch:  9, iter:     600, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:26:52, time (data): 0.319 (0.009)] l_pix: 4.7518e-02 l_percep: 1.7201e+00 
2024-12-09 19:18:10,783 INFO: [TwoBr..][epoch: 11, iter:     700, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:29:50, time (data): 0.319 (0.007)] l_pix: 4.8570e-02 l_percep: 1.8733e+00 
2024-12-09 19:18:43,109 INFO: [TwoBr..][epoch: 13, iter:     800, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:32:08, time (data): 0.321 (0.009)] l_pix: 3.6568e-02 l_percep: 1.7240e+00 
2024-12-09 19:19:15,267 INFO: [TwoBr..][epoch: 14, iter:     900, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:32:52, time (data): 0.322 (0.008)] l_pix: 5.2921e-02 l_percep: 1.8924e+00 
2024-12-09 19:19:47,553 INFO: [TwoBr..][epoch: 16, iter:   1,000, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:34:00, time (data): 0.322 (0.010)] l_pix: 5.0244e-02 l_percep: 1.3354e+00 
2024-12-09 19:19:47,555 INFO: Saving models and training states.
2024-12-09 19:19:52,813 INFO: Validation ValSet,		 # psnr: 24.7940	 # ssim: 0.7991
2024-12-09 19:20:25,212 INFO: [TwoBr..][epoch: 18, iter:   1,100, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:59:08, time (data): 0.323 (0.012)] l_pix: 4.9733e-02 l_percep: 1.8222e+00 
2024-12-09 19:20:56,882 INFO: [TwoBr..][epoch: 19, iter:   1,200, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:55:08, time (data): 0.320 (0.010)] l_pix: 4.1388e-02 l_percep: 1.8528e+00 
2024-12-09 19:21:29,106 INFO: [TwoBr..][epoch: 21, iter:   1,300, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:53:48, time (data): 0.318 (0.008)] l_pix: 3.5425e-02 l_percep: 1.3580e+00 
2024-12-09 19:22:01,191 INFO: [TwoBr..][epoch: 23, iter:   1,400, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:52:05, time (data): 0.320 (0.010)] l_pix: 3.1330e-02 l_percep: 1.5493e+00 
2024-12-09 19:22:33,052 INFO: [TwoBr..][epoch: 24, iter:   1,500, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:49:47, time (data): 0.319 (0.008)] l_pix: 3.4963e-02 l_percep: 1.3597e+00 
2024-12-09 19:23:05,421 INFO: [TwoBr..][epoch: 26, iter:   1,600, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:49:16, time (data): 0.321 (0.010)] l_pix: 3.2032e-02 l_percep: 1.2791e+00 
2024-12-09 19:23:37,942 INFO: [TwoBr..][epoch: 28, iter:   1,700, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:49:12, time (data): 0.326 (0.012)] l_pix: 3.0299e-02 l_percep: 1.5599e+00 
2024-12-09 19:24:09,802 INFO: [TwoBr..][epoch: 29, iter:   1,800, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:47:16, time (data): 0.322 (0.010)] l_pix: 3.5203e-02 l_percep: 1.2442e+00 
2024-12-09 19:24:42,025 INFO: [TwoBr..][epoch: 31, iter:   1,900, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:46:25, time (data): 0.318 (0.008)] l_pix: 2.7587e-02 l_percep: 1.1624e+00 
2024-12-09 19:25:14,389 INFO: [TwoBr..][epoch: 33, iter:   2,000, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:45:58, time (data): 0.321 (0.010)] l_pix: 3.1746e-02 l_percep: 1.3346e+00 
2024-12-09 19:25:14,390 INFO: Saving models and training states.
2024-12-09 19:25:18,521 INFO: Validation ValSet,		 # psnr: 26.0679	 # ssim: 0.8240
2024-12-09 19:25:50,523 INFO: [TwoBr..][epoch: 34, iter:   2,100, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:54:24, time (data): 0.318 (0.009)] l_pix: 3.6490e-02 l_percep: 1.3702e+00 
2024-12-09 19:26:22,796 INFO: [TwoBr..][epoch: 36, iter:   2,200, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:53:18, time (data): 0.321 (0.010)] l_pix: 2.8256e-02 l_percep: 1.1053e+00 
2024-12-09 19:26:55,121 INFO: [TwoBr..][epoch: 38, iter:   2,300, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:52:23, time (data): 0.324 (0.012)] l_pix: 3.9354e-02 l_percep: 1.3700e+00 
2024-12-09 19:27:26,959 INFO: [TwoBr..][epoch: 39, iter:   2,400, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:50:29, time (data): 0.321 (0.010)] l_pix: 3.0219e-02 l_percep: 1.1796e+00 
2024-12-09 19:27:59,344 INFO: [TwoBr..][epoch: 41, iter:   2,500, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:49:46, time (data): 0.319 (0.008)] l_pix: 3.4293e-02 l_percep: 1.0404e+00 
2024-12-09 19:28:31,471 INFO: [TwoBr..][epoch: 43, iter:   2,600, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:48:35, time (data): 0.320 (0.010)] l_pix: 4.0888e-02 l_percep: 1.5346e+00 
2024-12-09 19:29:03,320 INFO: [TwoBr..][epoch: 44, iter:   2,700, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:46:56, time (data): 0.319 (0.008)] l_pix: 3.1098e-02 l_percep: 1.1103e+00 
2024-12-09 19:29:35,540 INFO: [TwoBr..][epoch: 46, iter:   2,800, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:46:01, time (data): 0.321 (0.010)] l_pix: 3.4291e-02 l_percep: 1.2615e+00 
2024-12-09 19:30:07,906 INFO: [TwoBr..][epoch: 48, iter:   2,900, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:45:23, time (data): 0.325 (0.013)] l_pix: 3.0661e-02 l_percep: 1.5174e+00 
2024-12-09 19:30:39,647 INFO: [TwoBr..][epoch: 49, iter:   3,000, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:43:43, time (data): 0.321 (0.010)] l_pix: 4.4962e-02 l_percep: 1.5597e+00 
2024-12-09 19:30:39,649 INFO: Saving models and training states.
2024-12-09 19:30:43,774 INFO: Validation ValSet,		 # psnr: 26.2032	 # ssim: 0.8324
2024-12-09 19:31:16,165 INFO: [TwoBr..][epoch: 51, iter:   3,100, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:49:45, time (data): 0.320 (0.010)] l_pix: 3.6601e-02 l_percep: 1.4132e+00 
2024-12-09 19:31:48,393 INFO: [TwoBr..][epoch: 53, iter:   3,200, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:48:44, time (data): 0.321 (0.011)] l_pix: 3.6238e-02 l_percep: 1.4886e+00 
2024-12-09 19:32:20,227 INFO: [TwoBr..][epoch: 54, iter:   3,300, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:47:10, time (data): 0.319 (0.008)] l_pix: 2.9488e-02 l_percep: 1.2352e+00 
2024-12-09 19:32:52,540 INFO: [TwoBr..][epoch: 56, iter:   3,400, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:46:21, time (data): 0.321 (0.011)] l_pix: 2.8840e-02 l_percep: 1.2108e+00 
2024-12-09 19:33:24,883 INFO: [TwoBr..][epoch: 58, iter:   3,500, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:45:36, time (data): 0.326 (0.013)] l_pix: 4.6687e-02 l_percep: 1.4819e+00 
2024-12-09 19:33:56,726 INFO: [TwoBr..][epoch: 59, iter:   3,600, lr:(2.000e-04,2.000e-04,)] [eta: 1 day, 2:44:10, time (data): 0.322 (0.010)] l_pix: 2.6343e-02 l_percep: 1.1033e+00 
